import java.util.Scanner;

public class GameController {

	
	private boolean winner = false;
	Scanner keyboard = new Scanner(System.in);
	
	public Boolean play(Player p, Board board) {
		//initialize temp variable column
		int col = 0;
		
		//prompt user to enter column
		System.out.println("Enter the number 1-8 of the column that you want to place your piece");
		col = keyboard.nextInt();
		
		while(col < 1 || col > 8) {
			System.out.println("The column number must be an integer 1-8");
			col = keyboard.nextInt();
		}
		
		return board.rowSettledForColumn(col, p.playPiece());
		
	}
	
//	public int checkForWinner() {
//		return checkHorizontal() + checkVertical() + checkLDiag() + checkRDiag();
//	}
	
//	private int checkRDiag() {
//		// TODO Auto-generated method stub
//		
//	}
//
//	private int checkLDiag() {
//		// TODO Auto-generated method stub
//		
//	}

	public static void main(String[] args) {
		
		//initialize players
		Player player1 = new Player("red");
		Player player2 = new Player("black");
		
		//initialize board
		Board board = new Board();
		
		board.rowSettledForColumn(0, new Piece("black"));
		board.rowSettledForColumn(1, new Piece("black"));
		board.rowSettledForColumn(0, new Piece("black"));
		board.rowSettledForColumn(1, new Piece("black"));
		board.rowSettledForColumn(2, new Piece("black"));
		board.rowSettledForColumn(0, new Piece("black"));
		board.rowSettledForColumn(2, new Piece("red"));
		board.rowSettledForColumn(2, new Piece("black"));
		board.rowSettledForColumn(2, new Piece("red"));
		board.rowSettledForColumn(2, new Piece("red"));
		board.rowSettledForColumn(3, new Piece("red"));
		board.rowSettledForColumn(2, new Piece("black"));
		board.rowSettledForColumn(3, new Piece("black"));
		board.rowSettledForColumn(0, new Piece("red"));
		board.rowSettledForColumn(3, new Piece("black"));
		board.rowSettledForColumn(3, new Piece("black"));
		board.rowSettledForColumn(3, new Piece("red"));
		board.rowSettledForColumn(1, new Piece("black"));
		
		

		
		
		
		//show board
		board.showBoard();
		
//		board.checkVertical();
//		board.checkHorizontal();
//		board.checkLDiagonal();
		board.checkRDiagonal();
		
		
		
//		//returns true if its player 1's turn, false if player 2's
//		private Boolean onesMove = true;
//		
//		while(!winner) {
//			if(onesMove) {
//				player1.play();
//			}
//			else {
//				player2.play();
//			}
//			onesMove = !onesMove;
//			checkforWinner();
//		}
	}

}
